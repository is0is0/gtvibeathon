{"prompt": "Create a simple diffuse shader for a red material", "code": "// Simple diffuse shader\nuniform vec3 lightDir;\nuniform vec3 lightColor;\nuniform vec3 baseColor;\n\nvoid main() {\n    vec3 normal = normalize(vNormal);\n    float diff = max(dot(normal, lightDir), 0.0);\n    vec3 color = baseColor * lightColor * diff;\n    gl_FragColor = vec4(color, 1.0);\n}"}
{"prompt": "Create a metallic shader with environment reflections", "code": "// Metallic shader with reflections\nuniform vec3 cameraPos;\nuniform samplerCube envMap;\nuniform float metallic;\nuniform float roughness;\n\nvoid main() {\n    vec3 viewDir = normalize(cameraPos - vPosition);\n    vec3 normal = normalize(vNormal);\n    vec3 reflectDir = reflect(-viewDir, normal);\n    vec3 envColor = textureCube(envMap, reflectDir).rgb;\n    \n    // Mix between diffuse and metallic\n    vec3 diffuse = baseColor * (1.0 - metallic);\n    vec3 specular = envColor * metallic;\n    vec3 finalColor = diffuse + specular;\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}"}
